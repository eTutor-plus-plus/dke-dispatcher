# file: actions.properties
# Actions for Stages
#
# Possible Formats:
#   qualifiedClassName : stage
#   qualifiedClassName : stage | actionAbbr
###########################################

###### General Tasks
#at.jku.dke.etutor.dl.action.LoadOntologies : Bootstrap
at.jku.dke.etutor.dl.action.LoadOntologiesString : Bootstrap
at.jku.dke.etutor.dl.action.AddReasoner : Reasoning
at.jku.dke.etutor.dl.action.PurgeAnnotations : SetupChecks
at.jku.dke.etutor.dl.action.owlclass.AddClassReferences : SetupChecks
at.jku.dke.etutor.dl.action.conclusion.AddConclusions : SetupChecks
# MarkWantedClasses not necessary, work already done by AddClassReferences.
#at.jku.dke.etutor.dl.action.MarkWantedClasses : Checks2
# PairClasses not necessary since pairs are formed when matching
#at.jku.dke.etutor.dl.action.PairClasses : Checks4
at.jku.dke.etutor.dl.action.conclusion.AddEvidenceToConclusions : Interpretation
at.jku.dke.etutor.dl.action.RemoveExcessPairs : Interlude
at.jku.dke.etutor.dl.action.output.AsciiTable : Summary1
at.jku.dke.etutor.dl.action.output.LaTeX : LaTeX
at.jku.dke.etutor.dl.action.output.AnnotateOntology : Summary
at.jku.dke.etutor.dl.action.output.SubmissionSuitsSolution : Summary
at.jku.dke.etutor.dl.action.output.SummarizeHTML : Summary
#at.jku.dke.etutor.dl.action.output.ExportOntology : Export
at.jku.dke.etutor.dl.action.output.ExportOntologyString : Export
at.jku.dke.etutor.dl.action.CleanUp : Cleanup
at.jku.dke.etutor.dl.action.output.PrintDataStructures : Debug
at.jku.dke.etutor.dl.action.output.ConclusionsAsConfig : Debug1
#at.jku.dke.etutor.dl.action.output.PrintReasoning : Summary
at.jku.dke.etutor.dl.action.output.PrintOntologies : Debug3
at.jku.dke.etutor.dl.action.owlclass.check.FakeChecks : AddFakes


###### Symptom Checks
### checks on ontologies (O_b)
# Symptom O3
at.jku.dke.etutor.dl.action.owlclass.check.BaseOntologyDifferent : Checks1 | O3

### checks on student classes (k_s)
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsContainOr : Checks2 | K3
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsContainSomeAndNot : Checks2 | K4
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsContainOnly : Checks2 | K5
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsContainNoOnly : Checks2 | K6
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsContainSome : Checks2 | K7
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsContainNoSome : Checks2 | K8
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsDomainRange : Checks2 | K9
# TODO (follow up): extend checks to use test data
#at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsTriviallySatisfiable : Checks2 | K10
at.jku.dke.etutor.dl.action.owlclass.check.PositionOwlNothing : Checks2 | P1
at.jku.dke.etutor.dl.action.owlclass.check.PositionNoWanted : Checks4 | P5
at.jku.dke.etutor.dl.action.owlclass.check.ClassNotFound : Checks4 | O2

### checks on wanted classes (k_mg) (resulting in class pairs)
at.jku.dke.etutor.dl.action.owlclass.check.ClassNameMatch : Checks3 | N0
at.jku.dke.etutor.dl.action.owlclass.check.ClassNameSimilar : Checks3 | N1
at.jku.dke.etutor.dl.action.owlclass.check.ClassNameUnknown : Checks4 | N2
at.jku.dke.etutor.dl.action.owlclass.check.PositionsMatch : Checks3 | O1
# TODO: move K1 to Checks2 (to match concept and because earliest is best)
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsMatch : Checks4 | K1
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsNoMatch : Checks5 | K0

### checks on class pairs (k_mg, k_s)
at.jku.dke.etutor.dl.action.owlclass.check.ClassAxiomsSufficiencyDifferent : Checks5 | K2
at.jku.dke.etutor.dl.action.owlclass.check.PositionDifferentSubtree : Checks5 | P2
at.jku.dke.etutor.dl.action.owlclass.check.PositionTooSpecial : Checks5 | P3
at.jku.dke.etutor.dl.action.owlclass.check.PositionTooGeneral : Checks5 | P4
at.jku.dke.etutor.dl.action.owlclass.check.PositionVacant : Checks5 | P6
at.jku.dke.etutor.dl.action.owlclass.check.PositionSubclassesDiffer : Checks5 | P7